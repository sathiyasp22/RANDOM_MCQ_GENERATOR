{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY PRO SRC\\\\RANDOM_MCQ_GENERATOR\\\\client\\\\src\\\\Components\\\\Forms\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { Flex, Box, FormControl, FormLabel, Input, Checkbox, Stack, Button, Heading, Text, useColorModeValue } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // const [token, setToken] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Check if the user is already logged in\n  // useEffect(() => {\n  //     const userToken = localStorage.getItem(\"token\");\n  //     if (userToken) {\n  //         setToken(userToken);\n  //     }\n  // }, []);\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    if (username === \"\" || password === \" \") {\n      alert(\"Please fill the field first\");\n    } else {\n      const response = await fetch(\"http://localhost:8000/api/login/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        // setToken(data.token);\n        localStorage.setItem(\"token\", data.token);\n        localStorage.setItem(\"username\", username);\n        navigate(\"/home\");\n        window.location.reload();\n      } else {\n        alert(\"Invalid Username Or Password\");\n        console.log(\"Login failed\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      align: \"center\",\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 8,\n        mx: \"auto\",\n        maxW: \"lg\",\n        py: 12,\n        px: 6,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            fontSize: \"4xl\",\n            children: \"Sign in to your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          rounded: \"lg\",\n          boxShadow: \"lg\",\n          p: 8,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"UserName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                placeholder: \"Username\",\n                value: username,\n                onChange: e => setUsername(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                placeholder: \"Password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 10,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleLogin,\n                bg: \"blue.400\",\n                color: \"white\",\n                _hover: {\n                  bg: \"blue.500\"\n                },\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: [\"Don't have an account \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/signup\",\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"JBV44+s3MGwvm5P+UO1Bab3M9dc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","Flex","Box","FormControl","FormLabel","Input","Checkbox","Stack","Button","Heading","Text","useColorModeValue","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","navigate","handleLogin","e","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","ok","data","json","localStorage","setItem","token","window","location","reload","console","log","children","align","justify","spacing","mx","maxW","py","px","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","rounded","boxShadow","p","id","type","placeholder","value","onChange","target","onClick","bg","color","_hover","to","_c","$RefreshReg$"],"sources":["D:/MY PRO SRC/RANDOM_MCQ_GENERATOR/client/src/Components/Forms/login.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport {\r\n    Flex,\r\n    Box,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Checkbox,\r\n    Stack,\r\n\r\n    Button,\r\n    Heading,\r\n    Text,\r\n    useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nfunction Login() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    // const [token, setToken] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    // Check if the user is already logged in\r\n    // useEffect(() => {\r\n    //     const userToken = localStorage.getItem(\"token\");\r\n    //     if (userToken) {\r\n    //         setToken(userToken);\r\n    //     }\r\n    // }, []);\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        if (username === \"\" || password === \" \") {\r\n            alert(\"Please fill the field first\");\r\n        } else {\r\n            const response = await fetch(\"http://localhost:8000/api/login/\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    username: username,\r\n                    password: password,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                // setToken(data.token);\r\n                localStorage.setItem(\"token\", data.token);\r\n                localStorage.setItem(\"username\", username)\r\n                navigate(\"/home\");\r\n                window.location.reload()\r\n            } else {\r\n                alert(\"Invalid Username Or Password\");\r\n\r\n                console.log(\"Login failed\");\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* {token ? (\r\n                <div>\r\n                    <Heading mt={5}>Home Page</Heading>\r\n                    <Button mt={4} onClick={handleLogout}>\r\n                        Logout\r\n                    </Button>\r\n                </div>\r\n            ) : ( */}\r\n            <Flex align={\"center\"} justify={\"center\"}>\r\n                <Stack spacing={8} mx={\"auto\"} maxW={\"lg\"} py={12} px={6}>\r\n                    <Stack align={\"center\"}>\r\n                        <Heading fontSize={\"4xl\"}>Sign in to your account</Heading>\r\n                    </Stack>\r\n                    <Box rounded={\"lg\"} boxShadow={\"lg\"} p={8}>\r\n                        <Stack spacing={4}>\r\n                            <FormControl id=\"email\">\r\n                                <FormLabel>UserName</FormLabel>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Username\"\r\n                                    value={username}\r\n                                    onChange={(e) => setUsername(e.target.value)}\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl id=\"password\">\r\n                                <FormLabel>Password</FormLabel>\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                            </FormControl>\r\n                            <Stack spacing={10}>\r\n                                <Button\r\n                                    onClick={handleLogin}\r\n                                    bg={\"blue.400\"}\r\n                                    color={\"white\"}\r\n                                    _hover={{\r\n                                        bg: \"blue.500\",\r\n                                    }}\r\n                                >\r\n                                    Sign in\r\n                                </Button>\r\n                            </Stack>\r\n                            <Text>\r\n                                Don't have an account <Link to={\"/signup\"}>Sign up</Link>\r\n                            </Text>\r\n                        </Stack>\r\n                    </Box>\r\n                </Stack>\r\n            </Flex>\r\n            {/* )} */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}